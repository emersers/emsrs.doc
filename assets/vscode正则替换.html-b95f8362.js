import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as n,a as s}from"./app-2f8574e3.js";const d={},c=s(`<h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言" aria-hidden="true">#</a> 前言</h2><p>在写文档的时候有很多如下结构的内容想要更改结构</p><p>少量的手动很快就能完成，但是大批量类似重复的操作还是使用批量替换来的方便</p><p>正好vscode中可以使用正则表达式选择替换，通过正则表达式选择内容并通过占位符组合，于是就有了下文</p><p>这里我想将</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">###</span> [交互演示支持]()</span>
  
  <span class="token url">[<span class="token content">你可以在 Markdown 中添加交互演示</span>](<span class="token url">https://example.com</span>)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>一类的结构替换为下面的结构</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">####</span> [交互演示支持](https://example.com)</span>

<span class="token blockquote punctuation">&gt;</span> 你可以在 Markdown 中添加交互演示
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="分析" tabindex="-1"><a class="header-anchor" href="#分析" aria-hidden="true">#</a> 分析</h2><p><code>(.*)</code>作为占位符的内容，每个<code>(.*)</code>对应一个<code>$</code>符号。</p><p>比如下面的正则中有4个<code>(.*)</code>，对应的分别是<code>$1</code>、<code>$2</code>、<code>$3</code>、<code>$4</code></p><p>根据需求，<code>[……]</code>即<code>$1</code>需要保留,所以保留</p><p>将下面的<code>[……]()</code>中的内容即<code>$4</code>替换到上面的<code>[……]()</code>即<code>$2</code>中</p><h2 id="正则表达式" tabindex="-1"><a class="header-anchor" href="#正则表达式" aria-hidden="true">#</a> 正则表达式</h2><p>:::tips 正则表达式中的符号前需要加转义字符<code>\\</code>才能匹配到内容:::</p><h3 id="搜索-正则表达式" tabindex="-1"><a class="header-anchor" href="#搜索-正则表达式" aria-hidden="true">#</a> 搜索（正则表达式）</h3><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">###</span> (.*)\\((.*)\\)</span>
  
  \\[(.<span class="token italic"><span class="token punctuation">*</span><span class="token content">)\\]\\((.</span><span class="token punctuation">*</span></span>)\\)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="替换为" tabindex="-1"><a class="header-anchor" href="#替换为" aria-hidden="true">#</a> 替换为</h3><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#####</span> $1($4)</span>

<span class="token blockquote punctuation">&gt;</span> $3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em><strong>vscode</strong></em>还可以选择所需区域替换，正则表达式真是太好用辣</p><hr>`,21),o=[c];function i(t,l){return a(),n("div",null,o)}const u=e(d,[["render",i],["__file","vscode正则替换.html.vue"]]);export{u as default};
