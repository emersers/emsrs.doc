import{_ as s}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as d,o,c,a as e,b as n,d as t,e as i}from"./app-IAVjuUUn.js";const r={},l=i(`<h3 id="前言" tabindex="-1"><a class="header-anchor" href="#前言" aria-hidden="true">#</a> 前言</h3><p>下面是使用场景：</p><p>对一句或者一段话的内容结构进行重构，手动操作很快就能完成。</p><p>若需要对一大批结构相似的内容重构，一个个的改效率很低。</p><p>这时通过正则匹配并使用占位符进行重构可以高效的做到这件事。</p><h3 id="实战" tabindex="-1"><a class="header-anchor" href="#实战" aria-hidden="true">#</a> 实战</h3><hr><p>以vscode为例：</p><p>需要将</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">###</span> [交互演示支持]()</span>
  
  <span class="token url">[<span class="token content">你可以在 Markdown 中添加交互演示</span>](<span class="token url">https://example.com</span>)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>一类的结构重构为</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">####</span> [交互演示支持](https://example.com)</span>

<span class="token blockquote punctuation">&gt;</span> 你可以在 Markdown 中添加交互演示
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="分析" tabindex="-1"><a class="header-anchor" href="#分析" aria-hidden="true">#</a> 分析</h3><p><code>(.*)</code>作为占位符的内容，每个<code>(.*)</code>对应一个<code>$</code>符号。</p><p>比如下面的正则中有4个<code>(.*)</code>，对应的分别是<code>$1</code>、<code>$2</code>、<code>$3</code>、<code>$4</code></p><p>根据需求，<code>[……]</code>即<code>$1</code>需要保留,所以保留</p><p>将下面的<code>[……]()</code>中的内容即<code>$4</code>替换到上面的<code>[……]()</code>即<code>$2</code>中</p><h3 id="正则表达式" tabindex="-1"><a class="header-anchor" href="#正则表达式" aria-hidden="true">#</a> 正则表达式</h3><div class="hint-container warning"><p class="hint-container-title">注意</p><p>正则表达式中的符号前需要加转义字符<code>\\</code>才能匹配到内容</p></div><p>搜索（正则表达式）</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">###</span> (.*)\\((.*)\\)</span>
  
  \\[(.<span class="token italic"><span class="token punctuation">*</span><span class="token content">)\\]\\((.</span><span class="token punctuation">*</span></span>)\\)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>替换为</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">####</span> $1($4)</span>

<span class="token blockquote punctuation">&gt;</span> $3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>(在<em><strong>vscode</strong></em>中)可以指定选中内容替换</p>`,24),p={class:"hint-container info"},u=e("p",{class:"hint-container-title"},"注意",-1),m=e("p",null,"使用正则替换的前提是理解和正确使用正则表达式",-1),v={href:"https://c.runoob.com/front-end/854/",target:"_blank",rel:"noopener noreferrer"},h=e("p",null,"主流的代码编辑器包括word都支持正则替换",-1);function k(_,b){const a=d("ExternalLinkIcon");return o(),c("div",null,[l,e("div",p,[u,m,e("p",null,[n("可以使用"),e("a",v,[n("正则表达式在线测试"),t(a)]),n("工具先测试匹配有没有问题再使用")]),h])])}const x=s(r,[["render",k],["__file","vscode正则替换.html.vue"]]);export{x as default};
